<?php
/**
 * @copyright 2020 WebStollen GmbH
 */

namespace Plugin\ws5_mollie;

use JTL\Events\Dispatcher;
use JTL\Plugin\Bootstrapper;
use JTL\Plugin\Helper;
use JTL\Shop;
use JTL\Smarty\JTLSmarty;

class Bootstrap extends Bootstrapper
{
    public function boot(Dispatcher $dispatcher)
    {
        require_once __DIR__ . '/vendor/autoload.php';
        try {
            $dispatcher->listen('shop.hook.' . HOOK_BESTELLABSCHLUSS_INC_BESTELLUNGINDB, function ($args_arr) {
                if (array_key_exists('oBestellung', $args_arr)) {
                    $args_arr['oBestellung']->cAbgeholt = 'Y';
                }
            });
        } catch (\Exception $e) {
            if (\Shop::isFrontend()) {
                \Shop::Container()->getBackendLogService()->addCritical($e->getMessage());
            } else {
                \Shop::Container()->getLogService()->addCritical($e->getMessage());
            }
        }
    }

    public function renderAdminMenuTab(string $tabName, int $menuID, JTLSmarty $smarty): string
    {
        switch ($tabName) {
            case 'Dashboard':
                $oPlugin = Helper::getPluginById("ws5_mollie");
                $info = null;
                if ($oPlugin) {
                    $info = (object)[
                        'id' => $oPlugin->getID(),
                        'token' => $_SESSION['jtl_token'],
                        'endpoint' => $oPlugin->getPaths()->getAdminURL() . 'api.php',
                        'pluginID' => $oPlugin->getPluginID(),
                        'version' => $oPlugin->getCurrentVersion()->getOriginalVersion(),
                        'name' => $oPlugin->getMeta()->getName(),
                        'svg' => http_build_query([
                            'p' => $oPlugin->getPluginID(),
                            'v' => $oPlugin->getCurrentVersion()->getOriginalVersion(),
                            's' => APPLICATION_VERSION,
                            //'b' => JTL_MINOR_VERSION,
                            'd' => self::getDomain(),
                            'm' => base64_encode(self::getMasterMail(true)),
                            'php' => PHP_MAJOR_VERSION . '.' . PHP_MINOR_VERSION . '.' . PHP_RELEASE_VERSION . PHP_EXTRA_VERSION,
                        ])
                    ];
                }
                Shop::Smarty()->assign("infoJSON", json_encode($info))
                ->assign('root', $oPlugin->getPaths()->getAdminURL());
                return Shop::Smarty()->fetch($oPlugin->getPaths()->getAdminPath() . '/root.tpl');
            default:
                return parent::renderAdminMenuTab($tabName, $menuID, $smarty); // TODO: Change the autogenerated stub
        }
    }

    public static function getDomain($url = URL_SHOP)
    {

        $matches = array();
        @preg_match("/^((http(s)?):\/\/)?(www\.)?([a-zA-Z0-9-\.]+)(\/.*)?$/i", $url, $matches);
        return strtolower(isset($matches[5]) ? $matches[5] : $url);
    }

    public static function getMasterMail($e = false)
    {
        $settings = \Shop::getSettings(array(CONF_EMAILS));
        $mail = trim($settings['emails']['email_master_absender']);
        if ($e === true && $mail != '') {
            $mail = base64_encode($mail);
            $eMail = "";
            foreach (str_split($mail, 1) as $c) {
                $eMail .= chr(ord($c) ^ 0x00100110);
            }
            return base64_encode($eMail);
        }
        return $mail;
    }

}
